#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass book
\begin_preamble
\usepackage {graphicx}
\usepackage {longtable}

\usepackage {indentfirst}
\renewenvironment{center}{\par\centering}{\par}
\end_preamble
\use_default_options false
\master DocumentoMestre-Trabalho-ProgramacaoPratica.lyx
\maintain_unincluded_children false
\language brazilian
\language_package default
\inputencoding iso8859-1
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement p
\paperfontsize 12
\spacing onehalf
\use_hyperref false
\papersize a4paper
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 0
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Índice
\shortcut idx
\color #008000
\end_index
\paperwidth 210mm
\paperheight 297mm
\leftmargin 30mm
\topmargin 25mm
\rightmargin 20mm
\bottommargin 20mm
\secnumdepth 2
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle fancy
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Projeto 
\begin_inset CommandInset label
LatexCommand label
name "chap:Projeto-do-Sistema"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lhead{
\backslash
thechapter-Projeto} 
\backslash
rhead{
\backslash
thepage} 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Esse capítulo define o projeto do software em si, avaliando as plataformas
 à serem suportadas, os protocolos, recursos e interfaces utilizadas, associação
 à bibliotecas externas, subdivisão em hardwares, entre outros.
 A análise do projeto visa otimizar à estrutura do programa e otimizar os
 tempos de execução, memoria, custos e desenvolver a estrutura dos dados.
\end_layout

\begin_layout Section
Projeto do sistema
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
Projeto do sistema
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "sec:Projeto-do-sistema"

\end_inset


\end_layout

\begin_layout Enumerate
Protocolos
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
Protocolos
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Não será necessário incluir intercomunicações entre o programa e componentes
 externos, uma vez que o programa terá como objetivo final salvar os resultados
 obtidos em um arquivo.
 Caberá ao usuário definir o destino posterior do arquivo (impressão, envio
 dos dados etc).
 
\end_layout

\begin_layout Itemize
Denição do formato dos arquivos de entrada pelo programa.
 
\end_layout

\begin_deeper
\begin_layout Itemize
O prorama terá como entrada arquivos de extensão .txt
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Recursos
\end_layout

\begin_deeper
\begin_layout Itemize
O presente programa precisará utilizar o HD, o processador, o teclado, a
 tela, o mouse, a memória e demais componentes internos do computador.
 
\end_layout

\end_deeper
\begin_layout Enumerate
Controle
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
Controle
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Identificação e seleção da implementação de controle, seqüencial ou concorrente,
 baseado em procedimentos ou eventos.
 Implicam modificações no diagrama de execução.
 
\end_layout

\begin_deeper
\begin_layout Itemize
Neste projeto o controle será sequencial.
\end_layout

\end_deeper
\begin_layout Itemize
Identificação das condições extremas e de prioridades.
\end_layout

\begin_deeper
\begin_layout Itemize
Não se aplica.
\end_layout

\end_deeper
\begin_layout Itemize
Identificação da necessidade de otimização.
 Por exemplo: prefira sistemas com grande capacidade de memória; prefira
 vários hds pequenos a um grande.
\end_layout

\begin_deeper
\begin_layout Itemize
Neste projeto não ha necessidade de uso de processos de otimização.
 Os cálculos realizados requerem pouco espaço na memória, tanto física,
 quanto de processamento.
\end_layout

\end_deeper
\begin_layout Itemize
Identificação e definição de 
\emph on
loops
\emph default
 de controle e das escalas de tempo.
 
\end_layout

\begin_deeper
\begin_layout Itemize
Não se aplica.
\end_layout

\end_deeper
\begin_layout Itemize
Identificação de concorrências -- quais algoritmos podem ser implementados
 usando processamento paralelo.
 
\end_layout

\begin_deeper
\begin_layout Itemize
Neste projeto não ha necessidade de uso de processos de processamento paralelo
 pois os cálculos realizados requerem pouco esforço de processamento.
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Plataformas
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
Plataformas
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Identificação das estruturas arquitetônicas comuns.
 
\end_layout

\begin_layout Itemize
Identificação de subsistemas relacionados à plataforma selecionada.
 Podem implicar em modificações no diagrama de pacotes e no diagrama de
 componentes 
\end_layout

\begin_layout Itemize
Identificação e definição das plataformas a serem suportadas: hardware,
 sistema operacional e linguagem de programação.
\end_layout

\begin_deeper
\begin_layout Itemize
O sotware é multiplataforma, funciona no Windows e GNU/Linux.
\end_layout

\begin_layout Itemize
A linguagem selecionada é C++.
\end_layout

\end_deeper
\begin_layout Itemize
Seleção das bibliotecas externas a serem utilizadas.
\end_layout

\begin_deeper
\begin_layout Itemize
O software usa a biblioteca externa CGnuplot, que permite o acesso ao gerador
 de gráfico gnuplot.
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Padrões de projeto
\end_layout

\begin_deeper
\begin_layout Itemize
Normalmente os padrões de projeto são identificados e passam a fazer parte
 de uma biblioteca de padrões da empresa.
 Mas isto só ocorre após a realização de diversos projetos.
\end_layout

\begin_deeper
\begin_layout Itemize
Não se aplica.
\end_layout

\end_deeper
\end_deeper
\begin_layout Section
Projeto orientado a objeto -- POO
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
POO
\end_layout

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
Projeto orientado a objeto
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "sec:Projeto-orientado-a-objeto"

\end_inset


\end_layout

\begin_layout Standard
O projeto orientado a objeto é a etapa posterior ao projeto do sistema.
 Baseia-se na análise, mas considera as decisões do projeto do sistema.
 Acrescenta a análise desenvolvida as características da plataforma escolhida
 (hardware, sistema operacional e linguagem de programação).
 Passa pelo maior detalhamento do funcionamento do software, acrescentando
 atributos e métodos que envolvem a solução de problemas específicos não
 identificados durante a análise.
\end_layout

\begin_layout Standard
Envolve a otimização da estrutura de dados e dos algoritmos, a minimização
 do tempo de execução, de memória e de custos.
 Existe um desvio de ênfase para os conceitos da plataforma selecionada.
 
\end_layout

\begin_layout Subsubsection
Efeitos do projeto no modelo
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
modelo
\end_layout

\end_inset

 estrutural
\begin_inset CommandInset label
LatexCommand label
name "sub:Efeito-do-projeto-no-modelo-estrutural"

\end_inset


\end_layout

\begin_layout Itemize
Adicionar nos diagramas de pacotes as bibliotecas e subsistemas selecionados
 no projeto do sistema (exemplo: a biblioteca gráfica selecionada).
\end_layout

\begin_deeper
\begin_layout Itemize
Neste projeto foi utilizado como biblioteca gráfica CGnuplot.
\end_layout

\end_deeper
\begin_layout Itemize
Novas classes e associações oriundas das bibliotecas selecionadas e da linguagem
 escolhida devem ser acrescentadas ao modelo.
\end_layout

\begin_deeper
\begin_layout Itemize
Neste projeto foi feito uma associação entre a biblioteca CGnuplot e a CTracoSis
mico para geração do gráfico.
\end_layout

\end_deeper
\begin_layout Subsubsection
Estabelecer as dependências e restrições associadas à plataforma escolhida.
 Efeitos do projeto no modelo
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
modelo
\end_layout

\end_inset

 dinâmico
\begin_inset CommandInset label
LatexCommand label
name "sub:Efeito-do-projeto-no-modelo-dinamico"

\end_inset


\end_layout

\begin_layout Itemize
Revisar os diagramas de seqüência e de comunicação considerando a plataforma
 escolhida.
\end_layout

\begin_deeper
\begin_layout Itemize
Não se aplica.
\end_layout

\end_deeper
\begin_layout Itemize
Verificar a necessidade de se revisar, ampliar e adicionar novos diagramas
 de máquinas de estado e de atividades.
\end_layout

\begin_deeper
\begin_layout Itemize
Não se aplica.
\end_layout

\end_deeper
\begin_layout Subsubsection
Efeitos do projeto nos atributos
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
atributos
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "sub:Efeito-do-projeto-nos-atributos"

\end_inset


\end_layout

\begin_layout Itemize
Atributos novos podem ser adicionados a uma classe, como, por exemplo, atributos
 específicos de uma determinada linguagem de programação (acesso a disco,
 ponteiros, constantes e informações correlacionadas).
\end_layout

\begin_deeper
\begin_layout Itemize
Neste projeto o objeto gnuplot foi adicionado na classe CTracoSismico.
\end_layout

\end_deeper
\begin_layout Subsubsection
Efeitos do projeto nos métodos
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
métodos
\end_layout

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
Efeitos do projeto nos métodos
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Em função da plataforma escolhida, verifique as possíveis alterações nos
 métodos.
 O projeto do sistema costuma afetar os métodos de acesso aos diversos dispositi
vos (exemplo: hd, rede).
\end_layout

\begin_deeper
\begin_layout Itemize
Não se aplica.
\end_layout

\end_deeper
\begin_layout Itemize
De maneira geral os métodos devem ser divididos em dois tipos: i) tomada
 de decisões, métodos políticos ou de controle; devem ser claros, legíveis,
 flexíveis e usam polimorfismo.
 ii) realização de processamentos, podem ser otimizados e em alguns casos
 o polimorfismo deve ser evitado.
\end_layout

\begin_layout Itemize
Algoritmos complexos podem ser subdivididos.
 Verifique quais métodos podem ser otimizados.
 Pense em utilizar algoritmos prontos como os da STL (algoritmos genéricos).
\end_layout

\begin_deeper
\begin_layout Itemize
Neste projeto os métodos refletividade da classe CMeioAcustico e convolução
 da classe CTracoSismico.
\end_layout

\end_deeper
\begin_layout Itemize
Responda a pergunta: os métodos das classes estão dando resposta às responsabili
dades da classe?
\end_layout

\begin_deeper
\begin_layout Itemize
Neste projeto todos os métodos das classes estão correspondendo às responsabilid
ade da classe.
\end_layout

\end_deeper
\begin_layout Itemize
Revise os diagramas de classes, de seqüência e de máquina de estado.
\end_layout

\begin_deeper
\begin_layout Itemize
Não se aplica.
\end_layout

\end_deeper
\begin_layout Subsubsection
Efeitos do projeto nas heranças
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
heranças
\end_layout

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
Efeitos do projeto nas heranças
\end_layout

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
Heranças
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Reorganização das classes e dos métodos (criar métodos genéricos com parâmetros
 que nem sempre são necessários e englobam métodos existentes).
 
\end_layout

\begin_deeper
\begin_layout Itemize
Não se aplica.
\end_layout

\end_deeper
\begin_layout Itemize
Abstração do comportamento comum (duas classes podem ter uma superclasse
 em comum).
\end_layout

\begin_deeper
\begin_layout Itemize
Neste projeto foi implementado o conceito de abstração do comportamento
 comum nas seguintes classes CWaveletMorlet e CWaveletCM, onde CWavelet
 é a superclasse.
\end_layout

\end_deeper
\begin_layout Itemize
Utilização de delegação para compartilhar a implementação (quando você cria
 uma herança irreal para reaproveitar código).
 Usar com cuidado.
\end_layout

\begin_deeper
\begin_layout Itemize
Não se aplica.
\end_layout

\end_deeper
\begin_layout Subsubsection
Efeitos do projeto nas associações
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
Efeitos do projeto nas associações
\end_layout

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
Associações
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Deve-se definir na fase de projeto como as associações serão implementadas,
 se obedecerão um determinado padrão ou não.
\end_layout

\begin_layout Itemize
Se existe uma relação de "muitos", pode-se implementar a associação com
 a utilização de um dicionário, que é um mapa das associações entre objetos.
 Assim, o objeto A acessa o dicionário fornecendo uma chave (um nome para
 o objeto que deseja acessar) e o dicionário retorna um valor (um ponteiro)
 para o objeto correto.
 
\end_layout

\begin_deeper
\begin_layout Itemize
Neste projeto foi utilizado ponteiro na classe CWavelet.
\end_layout

\end_deeper
\begin_layout Itemize
Evite percorrer várias associações para acessar dados de classes distantes.
 Pense em adicionar associações diretas.
\end_layout

\begin_deeper
\begin_layout Itemize
A classe CGnuplot foi associada na classe CTracoSismico.
\end_layout

\end_deeper
\begin_layout Section
Diagrama de componentes
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
Diagrama de componentes
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "sec:Diagrama-de-componentes"

\end_inset


\end_layout

\begin_layout Standard
O diagrama de componentes mostra a forma como os componentes do programa
 se relacionam, suas dependências.
 
\end_layout

\begin_layout Standard
Veja na Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Diagrama-de-componentes"

\end_inset

 o diagrama de componentes.
 A geração dos objetos depende dos arquivos de classe de extensão
\family typewriter
 .h
\family default
 e 
\family typewriter
.cpp
\family default
.
 O subsistema ArquivoEntrada representa o arquivo que o programa importará
 os dados a serem manipulados.
 O programa executável a ser gerado depende das bibliotecas, dos arquivos
 desta e dos arquivos de entrada.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../imagens/DiagramaComponente.png
	width 100text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Diagrama-de-componentes"

\end_inset

Diagrama de componentes.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
Diagrama de implantação
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
Diagrama de execução
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "sec:Diagrama-de-execução"

\end_inset


\end_layout

\begin_layout Standard
O diagrama de implantação é um diagrama que inclui relações entre o sistema
 e o hardware e deve incluir os elementos necessários para que o sistema
 seja colocado em funcionamento.
 Veja na Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Diagrama-de-implantação"

\end_inset

 diagrama de implantação do programa.
 Primeiramente, os Perfis registram a velocidade da onda nas camadas, a
 profundiade e a densidade das camadas,enviando os dados para um computador
 na superfície.
 Esses arquivos são compilados em formato .txt.
 O programa importa os dados desse arquivo e na sua execução precisa de
 um monitor para mostrar os resultados e do teclado para receber parâmetros
 informados pelo usuário ou cliente.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../imagens/DiagramaImplantacao.png
	lyxscale 90
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Diagrama-de-implantação"

\end_inset

Diagrama de implantação
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_body
\end_document
